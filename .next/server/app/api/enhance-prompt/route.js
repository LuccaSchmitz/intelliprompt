/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "app/api/enhance-prompt/route";
exports.ids = ["app/api/enhance-prompt/route"];
exports.modules = {

/***/ "(rsc)/./app/api/enhance-prompt/route.ts":
/*!*****************************************!*\
  !*** ./app/api/enhance-prompt/route.ts ***!
  \*****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   POST: () => (/* binding */ POST)\n/* harmony export */ });\n/* harmony import */ var next_server__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/server */ \"(rsc)/./node_modules/next/dist/api/server.js\");\n\n// This would be replaced with actual AI service integration\nconst enhancePromptWithAI = async (prompt, category)=>{\n    // This is a placeholder for a real AI service integration\n    // In production, you would call an API like OpenAI, Claude, etc.\n    // Base enhancement frameworks by category\n    const enhancementFrameworks = {\n        content: (input)=>{\n            const wordCount = Math.max(Math.round(input.length * 2.5), 600);\n            const sections = Math.floor(Math.random() * 3) + 3; // 3-5 sections\n            const contentFormats = [\n                \"blog post\",\n                \"article\",\n                \"guide\",\n                \"analysis\",\n                \"review\"\n            ];\n            const format = contentFormats[Math.floor(Math.random() * contentFormats.length)];\n            const audiences = [\n                \"professionals\",\n                \"beginners\",\n                \"enthusiasts\",\n                \"experts\",\n                \"general audience\"\n            ];\n            const audience = audiences[Math.floor(Math.random() * audiences.length)];\n            const structures = [\n                \"with an engaging introduction, detailed body, and actionable conclusion\",\n                \"structured with headers, subheaders, and bullet points for clarity\",\n                \"using the AIDA (Attention, Interest, Desire, Action) framework\",\n                \"with a compelling narrative arc and supporting evidence\",\n                \"including real-world examples and case studies\"\n            ];\n            const structure = structures[Math.floor(Math.random() * structures.length)];\n            return `Write a ${wordCount}-word comprehensive ${format} about ${input}. Include ${sections} distinct sections ${structure}. Target audience is ${audience}. Incorporate relevant statistics, actionable takeaways, and address potential questions or objections from readers.`;\n        },\n        creative: (input)=>{\n            const genres = [\n                \"science fiction\",\n                \"fantasy\",\n                \"mystery\",\n                \"romance\",\n                \"thriller\",\n                \"historical fiction\"\n            ];\n            const genre = genres[Math.floor(Math.random() * genres.length)];\n            const wordCount = Math.max(Math.round(input.length * 3), 1000);\n            const elements = [\n                \"vivid sensory details and atmospheric descriptions\",\n                \"complex character motivations and internal conflicts\",\n                \"unexpected plot twists and subversions of genre conventions\",\n                \"thematic depth exploring moral ambiguity\",\n                \"unique worldbuilding elements that influence the narrative\"\n            ];\n            const element = elements[Math.floor(Math.random() * elements.length)];\n            const techniques = [\n                \"using show-don't-tell techniques\",\n                \"with varied sentence structure and pacing\",\n                \"employing metaphor and symbolism throughout\",\n                \"using dialogue to reveal character and advance plot\",\n                \"with a distinctive narrative voice\"\n            ];\n            const technique = techniques[Math.floor(Math.random() * techniques.length)];\n            return `Create a ${wordCount}-word ${genre} piece about ${input}. Incorporate ${element}, ${technique}. Develop a compelling narrative arc with rising action, climax, and resolution. Characters should have clear motivations, flaws, and growth. The setting should feel immersive and integral to the story.`;\n        },\n        business: (input)=>{\n            const formats = [\n                \"proposal\",\n                \"report\",\n                \"presentation\",\n                \"strategy document\",\n                \"analysis\",\n                \"case study\"\n            ];\n            const format = formats[Math.floor(Math.random() * formats.length)];\n            const businessAspects = [\n                \"ROI and financial projections\",\n                \"market analysis and competitive positioning\",\n                \"implementation timeline and milestones\",\n                \"risk assessment and mitigation strategies\",\n                \"resource allocation and team structure\"\n            ];\n            const aspect1 = businessAspects[Math.floor(Math.random() * businessAspects.length)];\n            let aspect2 = businessAspects[Math.floor(Math.random() * businessAspects.length)];\n            while(aspect2 === aspect1){\n                aspect2 = businessAspects[Math.floor(Math.random() * businessAspects.length)];\n            }\n            const structures = [\n                \"executive summary, problem statement, solution, implementation, and conclusion\",\n                \"situation analysis, objectives, strategies, tactics, and evaluation metrics\",\n                \"background, findings, recommendations, and next steps\",\n                \"current state, desired state, gap analysis, and roadmap\"\n            ];\n            const structure = structures[Math.floor(Math.random() * structures.length)];\n            return `Develop a professional ${format} for ${input} that includes detailed sections on ${aspect1} and ${aspect2}. Structure the document with ${structure}. Use precise business terminology, data-driven insights, and actionable recommendations. Format with clear headers, bullet points for key takeaways, and visual elements where appropriate. Include measurable objectives and success criteria.`;\n        },\n        image: (input)=>{\n            const styles = [\n                \"photorealistic\",\n                \"cinematic\",\n                \"digital art\",\n                \"oil painting\",\n                \"watercolor\",\n                \"concept art\",\n                \"3D rendering\",\n                \"anime\"\n            ];\n            const style = styles[Math.floor(Math.random() * styles.length)];\n            const lighting = [\n                \"golden hour sunlight\",\n                \"dramatic side lighting\",\n                \"soft diffused light\",\n                \"neon lights\",\n                \"moonlight\",\n                \"studio lighting\",\n                \"backlighting\"\n            ];\n            const lightType = lighting[Math.floor(Math.random() * lighting.length)];\n            const compositions = [\n                \"rule of thirds\",\n                \"dynamic perspective\",\n                \"symmetrical composition\",\n                \"extreme close-up\",\n                \"panoramic view\",\n                \"low angle shot\",\n                \"bird's eye view\"\n            ];\n            const composition = compositions[Math.floor(Math.random() * compositions.length)];\n            const details = [\n                \"intricate details\",\n                \"vibrant colors\",\n                \"high contrast\",\n                \"atmospheric elements\",\n                \"textured surfaces\",\n                \"shallow depth of field\"\n            ];\n            const detail = details[Math.floor(Math.random() * details.length)];\n            const resolutions = [\n                \"8K\",\n                \"4K\",\n                \"ultra-detailed\"\n            ];\n            const resolution = resolutions[Math.floor(Math.random() * resolutions.length)];\n            return `Generate a ${style} image of ${input} with ${lightType} and ${detail}. Use ${composition} for visual interest. The scene should have foreground, midground, and background elements to create depth. Include subtle environmental elements that enhance the mood and tell a story. ${resolution} resolution with photorealistic textures and accurate proportions.`;\n        },\n        code: (input)=>{\n            const languages = [\n                \"JavaScript\",\n                \"Python\",\n                \"TypeScript\",\n                \"Java\",\n                \"C#\",\n                \"Go\",\n                \"Ruby\"\n            ];\n            const language = languages[Math.floor(Math.random() * languages.length)];\n            const codeTypes = [\n                \"function\",\n                \"class\",\n                \"API endpoint\",\n                \"utility\",\n                \"algorithm implementation\",\n                \"data structure\",\n                \"CLI tool\"\n            ];\n            const codeType = codeTypes[Math.floor(Math.random() * codeTypes.length)];\n            const requirements = [\n                \"type safety and input validation\",\n                \"error handling and logging\",\n                \"performance optimization\",\n                \"memory efficiency\",\n                \"test cases and examples\",\n                \"documentation and comments\"\n            ];\n            const req1 = requirements[Math.floor(Math.random() * requirements.length)];\n            let req2 = requirements[Math.floor(Math.random() * requirements.length)];\n            while(req2 === req1){\n                req2 = requirements[Math.floor(Math.random() * requirements.length)];\n            }\n            return `Write a well-structured ${language} ${codeType} that ${input}. Include ${req1} and ${req2}. The code should follow best practices for readability and maintainability with appropriate naming conventions. Add detailed comments explaining complex logic, and include JSDoc or equivalent documentation. Provide example usage scenarios that demonstrate different input cases and expected outputs. The implementation should be production-ready and follow modern coding standards.`;\n        }\n    };\n    // Get the appropriate enhancement function based on category\n    const enhancementFunction = enhancementFrameworks[category] || enhancementFrameworks[\"content\"];\n    // Apply category-specific enhancement\n    let enhancedPrompt = enhancementFunction(prompt);\n    // Add universal prompt engineering elements for any AI model\n    const universalElements = [\n        `\\n\\nPlease make the output ${[\n            \"detailed\",\n            \"comprehensive\",\n            \"specific\",\n            \"precise\",\n            \"thorough\"\n        ][Math.floor(Math.random() * 5)]}.`,\n        `\\n\\nFormat the response to be ${[\n            \"easy to read\",\n            \"well-structured\",\n            \"visually organized\",\n            \"scannable\",\n            \"logically flowing\"\n        ][Math.floor(Math.random() * 5)]}.`,\n        `\\n\\nEnsure high quality by ${[\n            \"using evidence-based information\",\n            \"providing concrete examples\",\n            \"avoiding fluff or filler content\",\n            \"balancing depth and brevity\",\n            \"focusing on practical application\"\n        ][Math.floor(Math.random() * 5)]}.`\n    ];\n    // Add 1-2 universal elements randomly\n    const numElements = Math.floor(Math.random() * 2) + 1;\n    const shuffledElements = [\n        ...universalElements\n    ].sort(()=>0.5 - Math.random());\n    for(let i = 0; i < numElements; i++){\n        enhancedPrompt += shuffledElements[i];\n    }\n    return enhancedPrompt;\n};\nasync function POST(req) {\n    try {\n        const { prompt, category } = await req.json();\n        if (!prompt) {\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                error: \"Prompt is required\"\n            }, {\n                status: 400\n            });\n        }\n        // Authentication check would go here in a production environment\n        // For now, we're allowing public access to the API\n        // Enhance the prompt using our AI service\n        const enhancedPrompt = await enhancePromptWithAI(prompt, category || \"content\");\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            enhancedPrompt,\n            success: true\n        });\n    } catch (error) {\n        console.error(\"Error enhancing prompt:\", error);\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            error: \"Failed to enhance prompt\"\n        }, {\n            status: 500\n        });\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./app/api/enhance-prompt/route.ts\n");

/***/ }),

/***/ "(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader/index.js?name=app%2Fapi%2Fenhance-prompt%2Froute&page=%2Fapi%2Fenhance-prompt%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fenhance-prompt%2Froute.ts&appDir=%2FUsers%2Fctw04095%2FProjects%2Fintelliprompt%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Fctw04095%2FProjects%2Fintelliprompt&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!":

  !*** ./node_modules/next/dist/build/webpack/loaders/next-app-loader/index.js?name=app%2Fapi%2Fenhance-prompt%2Froute&page=%2Fapi%2Fenhance-prompt%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fenhance-prompt%2Froute.ts&appDir=%2FUsers%2Fctw04095%2FProjects%2Fintelliprompt%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Fctw04095%2FProjects%2Fintelliprompt&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D! ***!

/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   patchFetch: () => (/* binding */ patchFetch),\n/* harmony export */   routeModule: () => (/* binding */ routeModule),\n/* harmony export */   serverHooks: () => (/* binding */ serverHooks),\n/* harmony export */   workAsyncStorage: () => (/* binding */ workAsyncStorage),\n/* harmony export */   workUnitAsyncStorage: () => (/* binding */ workUnitAsyncStorage)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/route-modules/app-route/module.compiled */ \"(rsc)/./node_modules/next/dist/server/route-modules/app-route/module.compiled.js\");\n/* harmony import */ var next_dist_server_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_dist_server_route_kind__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/route-kind */ \"(rsc)/./node_modules/next/dist/server/route-kind.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/dist/server/lib/patch-fetch */ \"(rsc)/./node_modules/next/dist/server/lib/patch-fetch.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _Users_ctw04095_Projects_intelliprompt_app_api_enhance_prompt_route_ts__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./app/api/enhance-prompt/route.ts */ \"(rsc)/./app/api/enhance-prompt/route.ts\");\n\n\n\n\n// We inject the nextConfigOutput here so that we can use them in the route\n// module.\nconst nextConfigOutput = \"\"\nconst routeModule = new next_dist_server_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__.AppRouteRouteModule({\n    definition: {\n        kind: next_dist_server_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.APP_ROUTE,\n        page: \"/api/enhance-prompt/route\",\n        pathname: \"/api/enhance-prompt\",\n        filename: \"route\",\n        bundlePath: \"app/api/enhance-prompt/route\"\n    },\n    resolvedPagePath: \"/Users/ctw04095/Projects/intelliprompt/app/api/enhance-prompt/route.ts\",\n    nextConfigOutput,\n    userland: _Users_ctw04095_Projects_intelliprompt_app_api_enhance_prompt_route_ts__WEBPACK_IMPORTED_MODULE_3__\n});\n// Pull out the exports that we need to expose from the module. This should\n// be eliminated when we've moved the other routes to the new format. These\n// are used to hook into the route.\nconst { workAsyncStorage, workUnitAsyncStorage, serverHooks } = routeModule;\nfunction patchFetch() {\n    return (0,next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__.patchFetch)({\n        workAsyncStorage,\n        workUnitAsyncStorage\n    });\n}\n\n\n//# sourceMappingURL=app-route.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LWFwcC1sb2FkZXIvaW5kZXguanM/bmFtZT1hcHAlMkZhcGklMkZlbmhhbmNlLXByb21wdCUyRnJvdXRlJnBhZ2U9JTJGYXBpJTJGZW5oYW5jZS1wcm9tcHQlMkZyb3V0ZSZhcHBQYXRocz0mcGFnZVBhdGg9cHJpdmF0ZS1uZXh0LWFwcC1kaXIlMkZhcGklMkZlbmhhbmNlLXByb21wdCUyRnJvdXRlLnRzJmFwcERpcj0lMkZVc2VycyUyRmN0dzA0MDk1JTJGUHJvamVjdHMlMkZpbnRlbGxpcHJvbXB0JTJGYXBwJnBhZ2VFeHRlbnNpb25zPXRzeCZwYWdlRXh0ZW5zaW9ucz10cyZwYWdlRXh0ZW5zaW9ucz1qc3gmcGFnZUV4dGVuc2lvbnM9anMmcm9vdERpcj0lMkZVc2VycyUyRmN0dzA0MDk1JTJGUHJvamVjdHMlMkZpbnRlbGxpcHJvbXB0JmlzRGV2PXRydWUmdHNjb25maWdQYXRoPXRzY29uZmlnLmpzb24mYmFzZVBhdGg9JmFzc2V0UHJlZml4PSZuZXh0Q29uZmlnT3V0cHV0PSZwcmVmZXJyZWRSZWdpb249Jm1pZGRsZXdhcmVDb25maWc9ZTMwJTNEISIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7OztBQUErRjtBQUN2QztBQUNxQjtBQUNzQjtBQUNuRztBQUNBO0FBQ0E7QUFDQSx3QkFBd0IseUdBQW1CO0FBQzNDO0FBQ0EsY0FBYyxrRUFBUztBQUN2QjtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0EsWUFBWTtBQUNaLENBQUM7QUFDRDtBQUNBO0FBQ0E7QUFDQSxRQUFRLHNEQUFzRDtBQUM5RDtBQUNBLFdBQVcsNEVBQVc7QUFDdEI7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUMwRjs7QUFFMUYiLCJzb3VyY2VzIjpbIiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBBcHBSb3V0ZVJvdXRlTW9kdWxlIH0gZnJvbSBcIm5leHQvZGlzdC9zZXJ2ZXIvcm91dGUtbW9kdWxlcy9hcHAtcm91dGUvbW9kdWxlLmNvbXBpbGVkXCI7XG5pbXBvcnQgeyBSb3V0ZUtpbmQgfSBmcm9tIFwibmV4dC9kaXN0L3NlcnZlci9yb3V0ZS1raW5kXCI7XG5pbXBvcnQgeyBwYXRjaEZldGNoIGFzIF9wYXRjaEZldGNoIH0gZnJvbSBcIm5leHQvZGlzdC9zZXJ2ZXIvbGliL3BhdGNoLWZldGNoXCI7XG5pbXBvcnQgKiBhcyB1c2VybGFuZCBmcm9tIFwiL1VzZXJzL2N0dzA0MDk1L1Byb2plY3RzL2ludGVsbGlwcm9tcHQvYXBwL2FwaS9lbmhhbmNlLXByb21wdC9yb3V0ZS50c1wiO1xuLy8gV2UgaW5qZWN0IHRoZSBuZXh0Q29uZmlnT3V0cHV0IGhlcmUgc28gdGhhdCB3ZSBjYW4gdXNlIHRoZW0gaW4gdGhlIHJvdXRlXG4vLyBtb2R1bGUuXG5jb25zdCBuZXh0Q29uZmlnT3V0cHV0ID0gXCJcIlxuY29uc3Qgcm91dGVNb2R1bGUgPSBuZXcgQXBwUm91dGVSb3V0ZU1vZHVsZSh7XG4gICAgZGVmaW5pdGlvbjoge1xuICAgICAgICBraW5kOiBSb3V0ZUtpbmQuQVBQX1JPVVRFLFxuICAgICAgICBwYWdlOiBcIi9hcGkvZW5oYW5jZS1wcm9tcHQvcm91dGVcIixcbiAgICAgICAgcGF0aG5hbWU6IFwiL2FwaS9lbmhhbmNlLXByb21wdFwiLFxuICAgICAgICBmaWxlbmFtZTogXCJyb3V0ZVwiLFxuICAgICAgICBidW5kbGVQYXRoOiBcImFwcC9hcGkvZW5oYW5jZS1wcm9tcHQvcm91dGVcIlxuICAgIH0sXG4gICAgcmVzb2x2ZWRQYWdlUGF0aDogXCIvVXNlcnMvY3R3MDQwOTUvUHJvamVjdHMvaW50ZWxsaXByb21wdC9hcHAvYXBpL2VuaGFuY2UtcHJvbXB0L3JvdXRlLnRzXCIsXG4gICAgbmV4dENvbmZpZ091dHB1dCxcbiAgICB1c2VybGFuZFxufSk7XG4vLyBQdWxsIG91dCB0aGUgZXhwb3J0cyB0aGF0IHdlIG5lZWQgdG8gZXhwb3NlIGZyb20gdGhlIG1vZHVsZS4gVGhpcyBzaG91bGRcbi8vIGJlIGVsaW1pbmF0ZWQgd2hlbiB3ZSd2ZSBtb3ZlZCB0aGUgb3RoZXIgcm91dGVzIHRvIHRoZSBuZXcgZm9ybWF0LiBUaGVzZVxuLy8gYXJlIHVzZWQgdG8gaG9vayBpbnRvIHRoZSByb3V0ZS5cbmNvbnN0IHsgd29ya0FzeW5jU3RvcmFnZSwgd29ya1VuaXRBc3luY1N0b3JhZ2UsIHNlcnZlckhvb2tzIH0gPSByb3V0ZU1vZHVsZTtcbmZ1bmN0aW9uIHBhdGNoRmV0Y2goKSB7XG4gICAgcmV0dXJuIF9wYXRjaEZldGNoKHtcbiAgICAgICAgd29ya0FzeW5jU3RvcmFnZSxcbiAgICAgICAgd29ya1VuaXRBc3luY1N0b3JhZ2VcbiAgICB9KTtcbn1cbmV4cG9ydCB7IHJvdXRlTW9kdWxlLCB3b3JrQXN5bmNTdG9yYWdlLCB3b3JrVW5pdEFzeW5jU3RvcmFnZSwgc2VydmVySG9va3MsIHBhdGNoRmV0Y2gsICB9O1xuXG4vLyMgc291cmNlTWFwcGluZ1VSTD1hcHAtcm91dGUuanMubWFwIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader/index.js?name=app%2Fapi%2Fenhance-prompt%2Froute&page=%2Fapi%2Fenhance-prompt%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fenhance-prompt%2Froute.ts&appDir=%2FUsers%2Fctw04095%2FProjects%2Fintelliprompt%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Fctw04095%2FProjects%2Fintelliprompt&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!\n");

/***/ }),

/***/ "(rsc)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?server=true!":
/*!******************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?server=true! ***!
  \******************************************************************************************************/
/***/ (() => {



/***/ }),

/***/ "(ssr)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?server=true!":
/*!******************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?server=true! ***!
  \******************************************************************************************************/
/***/ (() => {



/***/ }),

/***/ "../app-render/after-task-async-storage.external":
/*!***********************************************************************************!*\
  !*** external "next/dist/server/app-render/after-task-async-storage.external.js" ***!
  \***********************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/server/app-render/after-task-async-storage.external.js");

/***/ }),

/***/ "../app-render/work-async-storage.external":
/*!*****************************************************************************!*\
  !*** external "next/dist/server/app-render/work-async-storage.external.js" ***!
  \*****************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/server/app-render/work-async-storage.external.js");

/***/ }),

/***/ "./work-unit-async-storage.external":
/*!**********************************************************************************!*\
  !*** external "next/dist/server/app-render/work-unit-async-storage.external.js" ***!
  \**********************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/server/app-render/work-unit-async-storage.external.js");

/***/ }),

/***/ "next/dist/compiled/next-server/app-page.runtime.dev.js":
/*!*************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-page.runtime.dev.js" ***!
  \*************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/compiled/next-server/app-page.runtime.dev.js");

/***/ }),

/***/ "next/dist/compiled/next-server/app-route.runtime.dev.js":
/*!**************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-route.runtime.dev.js" ***!
  \**************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/compiled/next-server/app-route.runtime.dev.js");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../../webpack-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = __webpack_require__.X(0, ["vendor-chunks/next"], () => (__webpack_exec__("(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader/index.js?name=app%2Fapi%2Fenhance-prompt%2Froute&page=%2Fapi%2Fenhance-prompt%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fenhance-prompt%2Froute.ts&appDir=%2FUsers%2Fctw04095%2FProjects%2Fintelliprompt%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Fctw04095%2FProjects%2Fintelliprompt&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!")));
module.exports = __webpack_exports__;

})();